---
import Clip from "../components/svg/Clip.astro";
import HeaderNav from "../components/constructor/HeaderNav.astro";
import idiomas from "../data/idiomas.json";
import Earth from "../components/svg/Earth.astro";
import empresaInfo from "../data/accessibleTravel.json";
import toursDestinos from "../data/toursDestinos.json"


function generateTourDestinationMenu(destinations: {
  title: string;
  titleLink: string;
  destinos: { nombre: string }[];
}[]): { label: string; href: string }[] {
  return destinations.map(({ title, titleLink }) => ({
    label: `Tours ${title}`,
    href: `/en/destino/${titleLink}`
  }));
}


const headerMenu = [
  {
    label: "Home",
    href: "/"
  },
  {
    label: "Tour Destination",
    href: "/tours",
    children:  generateTourDestinationMenu(toursDestinos)
  },
  {
    label: "Group Tours",
    href: "#",
    children: [
      { label: "Group tour pr√≥ximo", href: "#" }
    ]
  },
  {
    label: "Blog",
    href: "#",
    children: [
      { label: "Art√≠culo 1", href: "#" }
    ]
  },
  {
    label: "About Us",
    href: "/about",
    children: [
      { label: "Contact Us", href: "/en/contactUs" },
      { label: "T√©rminos y condiciones", href: "/en/terminosCondiciones" }
    ]
  }
];

---

<header class="bg-white fixed flex flex-col z-50 md:h-23 w-full shadow-md">


<section class="hidden md:flex w-full h-8 bg-gray-200 text-gray-700 text-xs">
  <div class="max-w-7xl mx-auto w-full px-4 flex justify-between items-center">
    <!-- Informaci√≥n de contacto -->
    <div class="flex items-center space-x-4">
      <div class="flex items-center">
        <svg class="w-3 h-3 mr-1 text-azul-travel" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
        </svg>
        <span>{empresaInfo.correo}</span>
      </div>
      
      <div class="flex items-center">
        <svg class="w-3 h-3 mr-1 text-azul-travel" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
        </svg>
        <div class="flex space-x-2">
          {empresaInfo.telefonos.map((telefono, index) => (
            <span >{telefono}</span>
          ))}
        </div>
      </div>
      
      <div class="flex items-center">
        <svg class="w-3 h-3 mr-1 text-azul-travel" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
        </svg>
        <span>{empresaInfo.direccion}</span>
      </div>
    </div>
    
    <!-- Redes sociales -->
    <div class="flex items-center space-x-3">
      {empresaInfo.redes.map((red, index) => (
        <a href={red.url} class="flex items-center hover:text-azul-travel transition-colors">
          {red.icono === "facebook" && (
            <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 24 24">
              <path d="M22 12a10 10 0 10-11.5 9.9v-7h-2v-3h2v-2.2c0-2 1.2-3.1 3-3.1.9 0 1.8.2 1.8.2v2h-1c-1 0-1.3.6-1.3 1.2V12h2.3l-.4 3h-1.9v7A10 10 0 0022 12z"></path>
            </svg>
          )}
          {red.icono === "twitter" && (
            <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 24 24">
              <path d="M23 3a10.9 10.9 0 01-3.14 1.53A4.48 4.48 0 0016 2c-2.48 0-4.5 2-4.5 4.5 0 .35.04.7.1 1.03A12.94 12.94 0 013 4.1a4.5 4.5 0 001.4 6.03 4.48 4.48 0 01-2-.55v.05c0 2.2 1.56 4.04 3.6 4.45a4.5 4.5 0 01-2 .07 4.5 4.5 0 004.2 3.1A9 9 0 012 19.54 12.9 12.9 0 008 21c7.5 0 11.6-6.2 11.6-11.6 0-.18 0-.36-.01-.54A8.3 8.3 0 0023 3z"></path>
            </svg>
          )}
          {red.icono === "instagram" && (
              <svg class=" w-3 h-3 mr-1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                <path d="M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zM12 0C8.741 0 8.333.014 7.053.072 2.695.272.273 2.69.073 7.052.014 8.333 0 8.741 0 12c0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98C8.333 23.986 8.741 24 12 24c3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98C15.668.014 15.259 0 12 0zm0 5.838a6.162 6.162 0 100 12.324 6.162 6.162 0 000-12.324zM12 16a4 4 0 110-8 4 4 0 010 8zm6.406-11.845a1.44 1.44 0 100 2.881 1.44 1.44 0 000-2.881z" />
              </svg>
          )}
          {red.icono === "whatsapp" && (
            <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 24 24">
              <path d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893a11.821 11.821 0 00-3.48-8.413z"></path>
            </svg>
          )}
          
        </a>
      ))}
    </div>
  </div>
</section>
  <div class="flex justify-between h-15 w-full">
    <a href={`/`} class="flex ml-4 py-1 items-center">
      <img
        src="/images/logos/LOGOATPsinfondo.webp"
        alt="Logo"
        class="h-auto w-38"
      />
    </a>

    <!-- Contenedor central -->
    <div class="flex w-full items-center justify-around  ">
      <!-- Navegaci√≥n -->
      <HeaderNav data={headerMenu} style=" " />

      <!-- Idioma -->
      <div class="flex items-center gap-1 mx-1">
        <Earth style="w-5 h-5" />
        <select
          id="language"
          name="language"
          class="appearance-none border px-4 py-1 border-gray-300 rounded text-sm text-gray-700 bg-white focus:outline-none focus:ring-1 focus:ring-blue-500"
        >
          <option value="en" selected>Select language</option>
          {
            idiomas.map((lang) => (
              <option value={lang.lang}>{lang.name}</option>
            ))
          }
        </select>
      </div>
      <button id="openMenu" class="md:hidden flex items-center justify-center w-10 h-10 bg-gray-200 rounded hover:bg-gray-300 transition">
        <svg class="w-6 h-6 text-gray-700" fill="currentColor" viewBox="0 0 24 24">
          <path d="M3 6h18v2H3V6zm0 5h18v2H3v-2zm0 5h18v2H3v-2z" />
        </svg>

      </button>
    </div>

    <!-- Cuadro azul -->
    <div 
    id="openModalBtn"
      class="bg-blue-600 w-20 h-full overflow-hidden   justify-center flex items-center cursor-pointer text-white"
    >
      <Clip style=" w-10  h-13 text-center -rotate-45  " />
    </div>
  </div>
</header>

<script is:inline>
document.addEventListener("DOMContentLoaded", () => {
  const navLinks = document.getElementById("nav-links");
  const openMenuBtn = document.getElementById("openMenu");
  const menu = document.getElementById("menu-principal");

  // üü¶ Toggle del men√∫ principal desde el bot√≥n hamburguesa
  openMenuBtn?.addEventListener("click", (e) => {
    e.stopPropagation(); // Previene que el evento se propague al documento
    navLinks.classList.toggle("translate-x-200");
  });

  // üîπ Gesti√≥n de submen√∫s al hacer clic en .escuchar
  menu?.addEventListener("click", (e) => {
    const btn = e.target.closest(".escuchar");
    if (!btn) return;

    e.stopPropagation(); // Evita cierre inmediato por evento global
    const subMenu = btn.nextElementSibling;

    // Cierra todos los submen√∫s visibles
    menu.querySelectorAll(".escuchar + ul").forEach((el) => {
      el.classList.add("hidden");
      el.classList.remove("flex-col");
    });

    // Abre solo el submen√∫ actual
    if (subMenu && !subMenu.classList.contains("flex-col")) {
      subMenu.classList.remove("hidden");
      subMenu.classList.add("flex-col");
    }
  });

  // ‚ùå Cierra el men√∫ principal y submen√∫s al hacer clic fuera
  document.addEventListener("click", (e) => {
    const isOutsideNav = !navLinks.contains(e.target);
    const isOutsideButton = !openMenuBtn?.contains(e.target);
    const isOutsideMenu = !menu?.contains(e.target);

    // Cerrar men√∫ m√≥vil si est√° abierto
    if (isOutsideNav && isOutsideButton && !navLinks.classList.contains("translate-x-200")) {
      navLinks.classList.add("translate-x-200");
    }

    // Cerrar submen√∫s si se hace clic fuera de la lista
    if (isOutsideMenu) {
      menu?.querySelectorAll(".escuchar + ul").forEach((el) => {
        el.classList.add("hidden");
        el.classList.remove("flex-col");
      });
    }
  });
});
</script>

